#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 12>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        lang1 {
            bindings = <&kp LANG2>;
            key-positions = <6 7>;
        };

        lang2 {
            bindings = <&kp LANG1>;
            key-positions = <7 8>;
        };

        nami {
            bindings = <&kp RS(CARET)>;
            key-positions = <29 30>;
        };

        big {
            bindings = <&kp EXCLAMATION>;
            key-positions = <30 31>;
        };

        hatena {
            bindings = <&kp QUESTION>;
            key-positions = <32 31>;
        };

        click {
            bindings = <&mkp MB1>;
            key-positions = <17 18>;
        };

        click2 {
            bindings = <&mkp MB2>;
            key-positions = <19 18>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        code_px: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp P &kp X>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &lt 1 W       &lt 2 E       &lt 3 R   &lt 5 T                                           &kp Y                &lt 1 U  &lt 2 I                  &lt 3 O                   &lt 5 P
&kp A             &lt 1 S       &lt 2 D       &lt 3 F   &lt 5 G                &kp F2                     &kp H                &lt 1 J  &lt 2 K                  &lt 3 L                   &mt RC(RIGHT_SHIFT) MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V     &kp B     &kp AT       &kp F1                     &kp N                &kp M    &mt RS(RIGHT_GUI) COMMA  &mt RA(RIGHT_GUI) PERIOD  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mkp MB2  &mkp MB1  &kp SPACE    &mt RIGHT_SHIFT BACKSPACE  &mt RIGHT_GUI ENTER                                                              &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp EQUAL  &kp BSPC       &kp APOS         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                              &kp N0     &kp N1  &kp N2  &kp N3  &kp SPACE
&kp SEMI   &kp COLON      &kp ASTRK        &kp LEFT_BRACE        &kp RIGHT_BRACE                    &kp UP_ARROW    &kp DOT    &kp N4  &kp N5  &kp N6  &kp FSLH
&kp AT     &kp HASH       &kp AMPS         &kp LBKT              &kp RBKT               &kp BSLH    &kp DOWN_ARROW  &kp COMMA  &kp N7  &kp N8  &kp N9  &kp PERCENT
&kp GLOBE  &kp RS(CARET)  &kp EXCLAMATION  &kp LSHFT             &kp LGUI               &kp LALT    &kp LS(TAB)     &kp TAB                            &code_px
            >;

            sensor-bindings = <&inc_dec_kp LG(LS(TAB)) LG(TAB)>;
        };

        ARROW {
            bindings = <
&kp ESCAPE     &kp LS(LG(NUMBER_4))  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                                &trans             &trans    &kp LS(UP)    &kp UP    &trans
&trans         &trans                &kp F7      &kp F8             &kp F9                       &trans            &trans             &kp LEFT  &kp LS(DOWN)  &kp DOWN  &kp RIGHT
&trans         &trans                &trans      &trans             &trans           &trans      &trans            &trans             &trans    &trans        &trans    &trans
&kp LS(LG(M))  &trans                &trans      &kp LSHFT          &kp LGUI         &kp LALT    &kp LS(LG(LEFT))  &kp LS(LG(RIGHT))                                    &kp RC(RG(Q))
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        MOUSE {
            bindings = <
&kp LG(NUMBER_1)  &kp LG(N2)    &kp LG(N3)     &kp F1     &kp F2                               &trans             &mkp MB5  &mkp MB4  &trans  &trans
&trans            &kp LG(LEFT)  &kp LG(RIGHT)  &trans     &trans                &trans         &trans             &trans    &trans    &trans  &trans
&trans            &trans        &trans         &trans     &trans    &trans      &trans         &trans             &trans    &trans    &trans  &trans
&trans            &trans        &trans         &kp LSHFT  &kp LGUI  &kp LALT    &kp LG(MINUS)  &kp LS(LG(EQUAL))                              &trans
            >;

            sensor-bindings = <&inc_dec_kp F1 F2>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans            &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        lay {
            bindings = <
&trans  &trans  &trans  &kp LA(Z)  &kp LS(LA(F))                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans     &trans                     &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans     &trans         &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &kp LSHFT  &kp LGUI       &kp LALT    &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(LEFT_ARROW) LC(RIGHT_ARROW)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };
    };
};
